// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_game_base.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MO.Protocol {

  /// <summary>Holder for reflection information generated from message_game_base.proto</summary>
  public static partial class MessageGameBaseReflection {

    #region Descriptor
    /// <summary>File descriptor for message_game_base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageGameBaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdtZXNzYWdlX2dhbWVfYmFzZS5wcm90bxILTU8uUHJvdG9jb2wimAEKBU1P",
            "TXNnEhAKCEFjdGlvbklkGAEgASgFEg4KBlVzZXJJZBgCIAEoAxINCgVNc2dJ",
            "ZBgDIAEoBRINCgVUb2tlbhgEIAEoCRIKCgJTdBgFIAEoAxIPCgdDb250ZW50",
            "GAYgASgMEgwKBFNpZ24YByABKAkSEQoJRXJyb3JDb2RlGAogASgFEhEKCUVy",
            "cm9ySW5mbxgLIAEoCSJECgtNT01zZ1Jlc3VsdBIRCglFcnJvckNvZGUYASAB",
            "KAUSEQoJRXJyb3JJbmZvGAIgASgJEg8KB0NvbnRlbnQYAyABKAxiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MO.Protocol.MOMsg), global::MO.Protocol.MOMsg.Parser, new[]{ "ActionId", "UserId", "MsgId", "Token", "St", "Content", "Sign", "ErrorCode", "ErrorInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MO.Protocol.MOMsgResult), global::MO.Protocol.MOMsgResult.Parser, new[]{ "ErrorCode", "ErrorInfo", "Content" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///tcp
  /// </summary>
  public sealed partial class MOMsg : pb::IMessage<MOMsg> {
    private static readonly pb::MessageParser<MOMsg> _parser = new pb::MessageParser<MOMsg>(() => new MOMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MOMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MO.Protocol.MessageGameBaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsg(MOMsg other) : this() {
      actionId_ = other.actionId_;
      userId_ = other.userId_;
      msgId_ = other.msgId_;
      token_ = other.token_;
      st_ = other.st_;
      content_ = other.content_;
      sign_ = other.sign_;
      errorCode_ = other.errorCode_;
      errorInfo_ = other.errorInfo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsg Clone() {
      return new MOMsg(this);
    }

    /// <summary>Field number for the "ActionId" field.</summary>
    public const int ActionIdFieldNumber = 1;
    private int actionId_;
    /// <summary>
    ///Request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionId {
      get { return actionId_; }
      set {
        actionId_ = value;
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "MsgId" field.</summary>
    public const int MsgIdFieldNumber = 3;
    private int msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MsgId {
      get { return msgId_; }
      set {
        msgId_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "St" field.</summary>
    public const int StFieldNumber = 5;
    private long st_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long St {
      get { return st_; }
      set {
        st_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 6;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    ///合并数据包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sign" field.</summary>
    public const int SignFieldNumber = 7;
    private string sign_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sign {
      get { return sign_; }
      set {
        sign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 10;
    private int errorCode_;
    /// <summary>
    ///Response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "ErrorInfo" field.</summary>
    public const int ErrorInfoFieldNumber = 11;
    private string errorInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MOMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MOMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionId != other.ActionId) return false;
      if (UserId != other.UserId) return false;
      if (MsgId != other.MsgId) return false;
      if (Token != other.Token) return false;
      if (St != other.St) return false;
      if (Content != other.Content) return false;
      if (Sign != other.Sign) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorInfo != other.ErrorInfo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionId != 0) hash ^= ActionId.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (MsgId != 0) hash ^= MsgId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (St != 0L) hash ^= St.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Sign.Length != 0) hash ^= Sign.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorInfo.Length != 0) hash ^= ErrorInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActionId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserId);
      }
      if (MsgId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MsgId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (St != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(St);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Content);
      }
      if (Sign.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Sign);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorInfo.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ErrorInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionId);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (MsgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (St != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(St);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (Sign.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sign);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MOMsg other) {
      if (other == null) {
        return;
      }
      if (other.ActionId != 0) {
        ActionId = other.ActionId;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.MsgId != 0) {
        MsgId = other.MsgId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.St != 0L) {
        St = other.St;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Sign.Length != 0) {
        Sign = other.Sign;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorInfo.Length != 0) {
        ErrorInfo = other.ErrorInfo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ActionId = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt64();
            break;
          }
          case 24: {
            MsgId = input.ReadInt32();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
          case 40: {
            St = input.ReadInt64();
            break;
          }
          case 50: {
            Content = input.ReadBytes();
            break;
          }
          case 58: {
            Sign = input.ReadString();
            break;
          }
          case 80: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 90: {
            ErrorInfo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///http
  /// </summary>
  public sealed partial class MOMsgResult : pb::IMessage<MOMsgResult> {
    private static readonly pb::MessageParser<MOMsgResult> _parser = new pb::MessageParser<MOMsgResult>(() => new MOMsgResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MOMsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MO.Protocol.MessageGameBaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsgResult(MOMsgResult other) : this() {
      errorCode_ = other.errorCode_;
      errorInfo_ = other.errorInfo_;
      content_ = other.content_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MOMsgResult Clone() {
      return new MOMsgResult(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "ErrorInfo" field.</summary>
    public const int ErrorInfoFieldNumber = 2;
    private string errorInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorInfo {
      get { return errorInfo_; }
      set {
        errorInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 3;
    private pb::ByteString content_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MOMsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MOMsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorInfo != other.ErrorInfo) return false;
      if (Content != other.Content) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorInfo.Length != 0) hash ^= ErrorInfo.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorInfo);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Content);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorInfo);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MOMsgResult other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorInfo.Length != 0) {
        ErrorInfo = other.ErrorInfo;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorInfo = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
